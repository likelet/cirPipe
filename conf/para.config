process.executor="slurm"
process.queue="amd_256"

process {




  refmapsplice = false
  / for using circexplorer2, can be obtained from  UCSC
  annotationfile = "/public2/home/sc52614/database/human/hg38/hg38_gencode.txt" /
  genomefile = "/public2/home/sc52614/database/human/hg38/GRCh38.fa"
  faifile = "/public2/home/sc52614/database/human/hg38/GRCh38.fa.fai"
  gtffile = "/public2/home/sc52614/database/human/hg38/gencode.v25.annotation.gtf"
  mRNA = ""

// index files for each software 
  starindex = "/public2/home/sc52614/database/human/hg38/GRCh38_starindex"// path and prefix 
  segindex = "/public2/home/sc52614/database/human/hg38/Segemehl_index/GRCh38.idx" // path only 
  hisat2_index = "/public2/home/sc52614/database/human/hg38/hisat2_index/CRCh38_trans"
  bowtie2index = "/public2/home/sc52614/database/human/hg38/bowtie1_index/GRCh38" // path and prefix 
  bowtieindex = "/public2/home/sc52614/database/human/hg38/bowtie2_index/GRCh38" // path and prefix
  bwaindex = "/public2/home/sc52614/database/human/hg38/bwa_index/GRCh38" //path and prefix
  skipDE = false

// set resource

  cpus = { check_max( 64, 'cpus' ) }
  memory = { check_max( 120.GB * task.attempt, 'memory' ) }
  time = { check_max( 240.h * task.attempt, 'time' ) }

  errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'terminate' }
  maxRetries = 1
  maxErrors = '-1'
  maxForks = 6

  // Process-specific resource requirements
  withName: Tools_Merge {
  errorStrategy = 'ignore'
  }

  withName: Merge_Annotation {
  errorStrategy = 'ignore'
  }

withName: Merge_DE {
  errorStrategy = 'ignore'
  }


  withName: Star {
    cpus = { check_max( 60, 'cpus' ) }
    memory = { check_max( 120.GB * task.attempt, 'memory' ) }
    time = { check_max( 240.h * task.attempt, 'time' ) }
    errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'ignore' }
  }

  withName: Segemehl {
    cpus = { check_max( 60, 'cpus' ) }
    memory = { check_max( 120.GB * task.attempt, 'memory' ) }
    time = { check_max( 240.h * task.attempt, 'time' ) }
    errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'ignore' }
  }

  withName: Segemehl_Bed {
    errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'ignore' }
  }
  withName: Segemehl_Matrix {
    errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'ignore' }
  }



  withName: BwaAndCiri {
    cpus = { check_max( 60, 'cpus' ) }
    memory = { check_max( 128.GB * task.attempt, 'memory' ) }
    time = { check_max( 240.h * task.attempt, 'time' ) }
    errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'ignore' }
  }



  withName: Recount_estimate_step_single{
    cpus = { check_max( 60, 'cpus' ) }
    memory = { check_max( 100.GB * task.attempt, 'memory' ) }
    time = { check_max( 240.h * task.attempt, 'time' ) }
    errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'terminate' }
  }
  withName: Recount_estimate_step_paired{
    cpus = { check_max( 60, 'cpus' ) }
    memory = { check_max( 100.GB * task.attempt, 'memory' ) }
    time = { check_max( 240.h * task.attempt, 'time' ) }
    errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'terminate' }
  }


  withName: Venn{
  errorStrategy={'ignore'}
  }
 

}

params {
  // Defaults only, expecting to be overwritten
  max_memory = 256.GB
  max_cpus = 64
  max_time = 240.h
}
